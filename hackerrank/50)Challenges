/* 
Julia asked her students to create some coding challenges. Write a query to print the hacker_id, name, and the total number of challenges 
created by each student. Sort your results by the total number of challenges in descending order. If more than one student created the same 
number of challenges, then sort the result by hacker_id. If more than one student created the same number of challenges and the count is less 
than the maximum number of challenges created, then exclude those students from the result.

Sample Output 1
12299 Rose 6
34856 Angela 6
79345 Frank 4
80491 Patrick 3
81041 Lisa 1
*/

WITH ChallengeCounts AS (
    SELECT 
        h.hacker_id, 
        h.name, 
        COUNT(c.challenge_id) AS total_challenges
    FROM 
        Hackers h
    LEFT JOIN 
        Challenges c
    ON 
        h.hacker_id = c.hacker_id
    GROUP BY 
        h.hacker_id, h.name
),
MaxCount AS (
    SELECT 
        MAX(total_challenges) AS max_challenges
    FROM 
        ChallengeCounts
),
ValidCounts AS (
    SELECT 
        cc.hacker_id, 
        cc.name, 
        cc.total_challenges
    FROM 
        ChallengeCounts cc
    JOIN 
        MaxCount mc
    ON 
        cc.total_challenges = mc.max_challenges
    UNION ALL
    SELECT 
        cc.hacker_id, 
        cc.name, 
        cc.total_challenges
    FROM 
        ChallengeCounts cc
    WHERE 
        cc.total_challenges < (
            SELECT MAX(total_challenges) 
            FROM ChallengeCounts
        )
        AND NOT EXISTS (
            SELECT 1
            FROM ChallengeCounts cc2
            WHERE cc.total_challenges = cc2.total_challenges 
            AND cc.total_challenges < (
                SELECT MAX(total_challenges)
                FROM ChallengeCounts
            )
            AND cc.hacker_id <> cc2.hacker_id
        )
)
SELECT 
    vc.hacker_id, 
    vc.name, 
    vc.total_challenges
FROM 
    ValidCounts vc
ORDER BY 
    vc.total_challenges DESC, 
    vc.hacker_id ASC;


-- another query for the same problem

SELECT C.hacker_id, H.name, COUNT(C.challenge_id) AS total FROM Hackers H
JOIN Challenges C 
ON C.hacker_id = H.hacker_id
GROUP BY C.hacker_id, H.name
HAVING  total = (SELECT COUNT(c1.challenge_id) FROM Challenges c1 GROUP BY c1.hacker_id ORDER BY count(*) DESC LIMIT 1) OR 
        total NOT IN (SELECT COUNT(c2.challenge_id) FROM Challenges c2 GROUP BY c2.hacker_id HAVING c2.hacker_id <> C.hacker_id)
ORDER BY total DESC, C.hacker_id;
